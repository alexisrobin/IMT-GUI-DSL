/*
 * generated by Xtext 2.10.0
 */
package org.imt.eval.gui.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.imt.eval.gui.gui.Frame
import java.io.File
import org.imt.eval.gui.gui.FrameContent
import org.imt.eval.gui.gui.Label
import org.imt.eval.gui.gui.Button

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class GuiGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		var frame = resource.contents.head as Frame
		var sep = File.separator

		//Building a platform independent URI
		var filePath = 'gui'+sep+'FrameApplication.java';
		
		fsa.generateFile(filePath, frame.compile)	
	}
	
	def compile(Frame frame) '''
		import javax.swing.JFrame;
		import javax.swing.JLabel;
		import javax.swing.JButton;
		import javax.swing.SwingUtilities;
		import java.awt.FlowLayout;
		public class FrameApplication {
			public static void main(String[] args) {
		 		SwingUtilities.invokeLater(new Runnable() {
		 			public void run() {
						JFrame «frame.name» = new JFrame();
						«frame.name».setLayout(new FlowLayout());
						«frame.name».setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
						«frame.name».setTitle("«frame.title»");
						«frame.name».setSize(«frame.width», «frame.height»);
						«FOR FrameContent fContent : frame.frameContents»
							«fContent.compile(frame, frame.frameContents.indexOf(fContent))» 
						«ENDFOR»
						A.setVisible(true);
					}
				});
			}
		}
	'''
	
	def dispatch compile(Label label, Frame f, int idx) '''
		JLabel label«idx» = new JLabel();
		«f.name».add(label«idx»);
		label«idx».setText("«label.content»");
	'''
	
	def dispatch compile(Button button, Frame f, int idx) '''
		JButton button«idx» = new JButton();
		«f.name».add(button«idx»);
		button«idx».setText("«button.content»");
	'''
}
